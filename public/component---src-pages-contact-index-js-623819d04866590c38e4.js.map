{"version":3,"sources":["webpack:///./src/pagesMaterial/ContactPage/ContactPage.js","webpack:///./src/pages/Contact/index.js","webpack:///./src/components/animated-heading/index.js","webpack:///./src/pagesMaterial/ServicesPage/Header/Header.js"],"names":["ContactPage","render","Container","fluid","className","text","animation","Row","Col","lg","md","sm","ContactForm2","React","Component","Index","site","this","props","data","meta","title","name","content","description","Header","Footer2","ContactQuery","Animated_Heading","state","inViewport","animation_complete","animate","force","componentDidUpdate","setState","delay","split","forEach","value","index","v","i","setTimeout","shouldComponentUpdate","nextProps","nextState","style","textAlign","marginBottom","Animation","keyframes","AnimatedLetter","styled","span","fontSize","lineHeight","Space","space","time","map","length","key","animationDelay","color","AnimatedHeading","handleViewport","NavbarWrapper","div","NavbarContainer","LogoWrapper","Logo","img","href","src","AtriomLogo","alt"],"mappings":"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","file":"component---src-pages-contact-index-js-623819d04866590c38e4.js","sourcesContent":["import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport AnimationContainer from 'components/animation-container'\r\nimport AnimatedHeading from 'components/animated-heading'\r\nimport ContactForm2 from '../../sections/contact/parts/ContactForm2/ContactForm2'\r\nimport ContactSection from '../../sections/contact/parts/ContactSection/ContactSection2'\r\nimport './ContactPage.css'\r\n\r\nclass ContactPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <Container fluid className=\"creative_container_contactPage\">\r\n                <AnimatedHeading text=\"Contact Us\" />\r\n                <AnimationContainer animation=\"fadeIn\">\r\n                    <Row className=\"formRow\">\r\n                        <Col className=\"form_col\" lg={8} md={8} sm={12}><ContactForm2 /></Col>\r\n                        <Col className=\"form_col\" lg={4} md={4} sm={12}><ContactSection /></Col>\r\n                    </Row>\r\n                </AnimationContainer>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\nexport default ContactPage;","import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport Helmet from 'react-helmet'\r\nimport Header from '../../pagesMaterial/ServicesPage/Header/Header'\r\nimport ContactPage from '../../pagesMaterial/ContactPage/ContactPage'\r\nimport Footer2 from '../../components/footer/Footer2/Footer2'\r\n\r\nclass Index extends React.Component {\r\n\r\n  render() {\r\n\r\n    const { site } = this.props.data\r\n\r\n    return (\r\n      <div>\r\n        <Helmet>\r\n          <title>{site.meta.title}</title>\r\n          <meta name=\"description\" content={site.meta.description} />\r\n        </Helmet>\r\n        <Header />\r\n        <ContactPage />\r\n        <Footer2 />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Index\r\n\r\nexport const ContactQuery = graphql`\r\n  query {\r\n    site {\r\n      meta: siteMetadata {\r\n        title\r\n        description\r\n      }\r\n    }\r\n  }\r\n`","import React from 'react'\r\nimport handleViewport from 'react-in-viewport'\r\nimport styled, { keyframes } from 'styled-components'\r\n\r\nclass Animated_Heading extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            inViewport: false,\r\n            animation_complete: false,\r\n            animate: false,\r\n            force: false\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.inViewport !== this.props.inViewport && !this.state.force) {\r\n            if (!this.state.animation_complete) {\r\n                this.setState({ inViewport: this.props.inViewport, animate: true, force: true })\r\n                let delay = 1\r\n                this.props.text.split(\" \").forEach(function (value, index) {\r\n                    value.split(\"\").forEach(function (v, i) {\r\n                        ++delay\r\n                    })\r\n                })\r\n                setTimeout(() => {\r\n                    this.setState({ animation_complete: true })\r\n                }, (delay * 200) + 500)\r\n            }\r\n        }\r\n        if (this.state.inViewport !== this.props.inViewport && this.state.force) {\r\n            this.setState({ animation_complete: true, force: false })\r\n        }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (this.state.animation_complete && !this.props.inViewport) {\r\n            return false\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <h2 style={{ textAlign: \"center\", marginBottom: \"20px\" }} className=\"heading\">\r\n                {this.animate()}\r\n            </h2>\r\n        )\r\n    }\r\n\r\n    animate() {\r\n        const Animation = keyframes`\r\n            0% {\r\n                opacity: 0;\r\n            }\r\n            100% {\r\n                transform: translate(0,0);\r\n                opacity: 1;\r\n            }\r\n        `\r\n\r\n        const AnimatedLetter = styled.span`\r\n            transform: translate(0, -100px);\r\n            display: inline-block;\r\n            transition: 1s;\r\n            opacity: 0;\r\n            font-size: ${this.props.fontSize ? this.props.fontSize : \"100px\"};\r\n            line-height: ${this.props.lineHeight ? this.props.lineHeight : \"90px\"};\r\n            font-family: Teko;\r\n            text-transform: uppercase;\r\n            word-wrap: break-word;\r\n            @media (max-width: 767px) {\r\n                font-size: 40px;\r\n                line-height: 40px;\r\n            }\r\n            &.animation_complete {\r\n                transform: translate(0, 0);\r\n                opacity: 1;\r\n            }\r\n            &.animate {\r\n                animation: ${Animation} forwards 1s;\r\n            }\r\n        `\r\n        const Space = styled.span`\r\n            word-wrap: break-word;\r\n            font-size: 100px;\r\n            margin: 0 ${this.props.space ? this.props.space : \"10px\"};\r\n            @media (max-width: 767px) {\r\n                font-size: 40px;\r\n                line-height: 40px;\r\n                margin: 0 5px;\r\n            }\r\n        `\r\n        let time = 0;\r\n        return this.props.text.split(\" \").map((value, index) => {\r\n            return value.split(\"\").map((v, i) => {\r\n                ++time\r\n                // return i + 1 !== value.length ? <AnimatedLetter key={i} style={{ animationDelay: `${time * 100}ms`, color: index % 2 !== 0 || this.props.color ? \"#04e5e5\" : \"#fff\" }} className={!this.state.animation_complete ? this.state.animate ? \"animate\" : \"\" : \"animation_complete\"}>{v}</AnimatedLetter> : <span key={i}><AnimatedLetter style={{ animationDelay: `${time * 100}ms`, color: index % 2 !== 0 || this.props.color ? \"#04e5e5\" : \"#fff\" }} className={!this.state.animation_complete ? this.state.animate ? \"animate\" : \"\" : \"animation_complete\"}>{v}</AnimatedLetter><Space /></span>\r\n                // return i + 1 !== value.length ? <AnimatedLetter key={i} style={{ animationDelay: `${time * 100}ms`, color: index % 2 !== 0 || this.props.color ? \"#f6b10a\" : \"#013567\" }} className={!this.state.animation_complete ? this.state.animate ? \"animate\" : \"\" : \"animation_complete\"}>{v}</AnimatedLetter> : <span key={i}><AnimatedLetter style={{ animationDelay: `${time * 100}ms`, color: index % 2 !== 0 || this.props.color ? \"#f6b10a\" : \"#013567\" }} className={!this.state.animation_complete ? this.state.animate ? \"animate\" : \"\" : \"animation_complete\"}>{v}</AnimatedLetter><Space /></span>\r\n                return i + 1 !== value.length ? <AnimatedLetter key={i} style={{ animationDelay: `${time * 100}ms`, color: index % 2 !== 0 || this.props.color ? \"#f6b10a\" : \"#fff\" }} className={!this.state.animation_complete ? this.state.animate ? \"animate\" : \"\" : \"animation_complete\"}>{v}</AnimatedLetter> : <span key={i}><AnimatedLetter style={{ animationDelay: `${time * 100}ms`, color: index % 2 !== 0 || this.props.color ? \"#f6b10a\" : \"#fff\" }} className={!this.state.animation_complete ? this.state.animate ? \"animate\" : \"\" : \"animation_complete\"}>{v}</AnimatedLetter><Space /></span>\r\n            })\r\n        })\r\n    }\r\n\r\n}\r\nconst AnimatedHeading = handleViewport(Animated_Heading);\r\n\r\nexport default AnimatedHeading","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Menubtn from '../../../components/navbar/menubtn/menubtn'\r\nimport AtriomLogo from '../../../../static/HomePageImages/HomeImages/Navbar/atriomLogo.png'\r\n\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n\r\n        const NavbarWrapper = styled.div`\r\n            background-color: #013567;\r\n            width: 100%;\r\n            padding: 8px 30px;\r\n            @media (max-width: 992px) {\r\n                padding: 10px 30px;\r\n            }\r\n            @media (max-width: 400px) {\r\n                padding: 10px 15px;\r\n            }\r\n        `\r\n\r\n        const NavbarContainer = styled.div`\r\n            display: flex;\r\n            position: relative;\r\n            // @media (max-width: 500px) {\r\n            //     padding: 0;\r\n            // }\r\n            \r\n        `\r\n\r\n        const LogoWrapper = styled.div`\r\n            flex: 0 0 30%;\r\n            max-width: 30%;\r\n            display: flex;\r\n            justify-content: flex-start;\r\n            align-items: center;\r\n            @media (max-width: 576px) {\r\n                flex: 0 0 40%;\r\n                max-width: 40%;\r\n            }\r\n            @media (max-width: 400px) {\r\n                flex: 0 0 45%;\r\n                max-width: 45%;\r\n            }\r\n        `\r\n\r\n        const Logo = styled.img`\r\n            height: auto !important;\r\n            width: 100%;\r\n            @media (max-width: 576px) {\r\n                height: auto !important;\r\n                width: 100%;\r\n            }\r\n            @media (max-width: 576px) {\r\n                height: auto !important;\r\n                width: 100%;\r\n            }\r\n        `\r\n\r\n\r\n        return (\r\n            <NavbarWrapper>\r\n                <NavbarContainer>\r\n                    <LogoWrapper className=\"logo\">\r\n                        <a href=\"/\"><Logo src={AtriomLogo} alt=\"Atriom\" /></a>\r\n                    </LogoWrapper>\r\n                    <Menubtn />\r\n                </NavbarContainer>\r\n            </NavbarWrapper>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header"],"sourceRoot":""}